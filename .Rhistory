geom_bar(stat="identity", fill="steelblue" ) +  theme_bw() +
geom_text(aes(label=round(mean_r,2)), vjust=-0.8, size=3.5)
barplot(df_ratings_means$n ~ df_ratings_means$movieId)
barplot(df_ratings_means$n ~ df_ratings_means$movieId, col="blue",
main="유저가 가장 많이 평가한 영화 top10", xlab="영화제목", ylab="평가한 조회 수", border="blue", col=4)
barplot(df_ratings_means$n ~ df_ratings_means$movieId, col="blue",
main="유저가 가장 많이 평가한 영화 top10", xlab="영화제목", ylab="평가한 조회 수", border="blue")
barplot(df_ratings_means$n ~ df_ratings_means$movieId, col="stelblue",
main="유저가 가장 많이 평가한 영화 top10", xlab="영화제목", ylab="평가한 조회 수", border="blue")
ggplot(data=r2, aes(x=movieId, y=n_user)) +
geom_bar(stat="identity", fill="aliceblue" ) +  theme_bw() +
geom_text(aes(label=round(mean_r,2)), vjust=-0.8, size=3.5)
barplot(df_ratings_means$n ~ df_ratings_means$movieId, col="aliceblue",
main="유저가 가장 많이 평가한 영화 top10", xlab="영화제목", ylab="평가한 조회 수", border="blue")
barplot(df_ratings_means$n ~ df_ratings_means$movieId, col="aliceblue",
main="유저가 가장 많이 평가한 영화 top10", xlab="영화제목", ylab="평가한 조회 수", border="aliceblue")
barplot(df_ratings_means$n ~ df_ratings_means$movieId, col="aliceblue",
main="유저가 가장 많이 평가한 영화 top10", xlab="영화제목", ylab="평가한 조회 수", border="cadetblue3")
barplot(df_ratings_means$n ~ df_ratings_means$movieId, col="steelblue",
main="유저가 가장 많이 평가한 영화 top10", xlab="영화제목", ylab="평가한 조회 수", border="steelblue")
barplot(df_ratings_means$n ~ df_ratings_means$movieId, col="royalblue1",
main="유저가 가장 많이 평가한 영화 top10", xlab="영화제목", ylab="평가한 조회 수", border="steelblue")
barplot(df_ratings_means$n ~ df_ratings_means$movieId, col="midnightblue",
main="유저가 가장 많이 평가한 영화 top10", xlab="영화제목", ylab="평가한 조회 수", border="steelblue")
barplot(df_ratings_means$n ~ df_ratings_means$movieId, col="lightskyblue",
main="유저가 가장 많이 평가한 영화 top10", xlab="영화제목", ylab="평가한 조회 수", border="steelblue")
text(my_bar, data$average+0.4 , paste("n: ", df_ratings_means$movieId, sep="") ,cex=1)
my_bar = barplot(df_ratings_means$n ~ df_ratings_means$movieId, col="lightskyblue",
main="유저가 가장 많이 평가한 영화 top10",
xlab="영화제목", ylab="평가한 조회 수", border="steelblue")
text(my_bar, data$average+0.4 , paste("n: ", df_ratings_means$movieId, sep="") ,cex=1)
text(my_bar, df_ratings_means$movieId+0.4 , paste("n: ", df_ratings_means$movieId, sep="") ,cex=1)
df_ratings_means$movieId
a <- df_ratings_means$movieId
a
m$movieId==a
m$movieId
which(m$movieId==a)
labs <- c('포레스트 검프','쇼생크 탈출','펄프 픽션','양들의 침묵','매트릭스','스타워즈','쥬라기공원','브레이브하트','터미네이터2','쉰들러 리스트')
text(cex=1, x=x-.25, y=-1.25, labs, xpd=TRUE, srt=45)
text(cex=1, x=0.25, y=1.25, labs, xpd=TRUE, srt=45)
text(cex=1, labs, xpd=TRUE, srt=45)
barplot(df_ratings_means$n ~ df_ratings_means$movieId,
names.arg=c('포레스트 검프','쇼생크 탈출','펄프 픽션','양들의 침묵','매트릭스','스타워즈','쥬라기공원','브레이브하트','터미네이터2','쉰들러 리스트'),
main="사용자 평가율 영화 Top10",
xlab="영화제목",
ylab="평가율",
las=2)
barplot(df_ratings_means$n ~ df_ratings_means$movieId,
names.arg=c('포레스트 검프','쇼생크 탈출','펄프 픽션','양들의 침묵','매트릭스','스타워즈','쥬라기공원','브레이브하트','터미네이터2','쉰들러 리스트'),
main="사용자 평가율 영화 Top10",
xlab="영화제목",
ylab="평가율",
las=2.5)
barplot(df_ratings_means$n ~ df_ratings_means$movieId,
names.arg=c('포레스트 검프','쇼생크 탈출','펄프 픽션','양들의 침묵','매트릭스','스타워즈','쥬라기공원','브레이브하트','터미네이터2','쉰들러 리스트'),
main="사용자 평가율 영화 Top10",
xlab="영화제목",
ylab="평가율",
las=3)
barplot(df_ratings_means$n ~ df_ratings_means$movieId,
names.arg=c('포레스트 검프','쇼생크 탈출','펄프 픽션','양들의 침묵','매트릭스','스타워즈','쥬라기공원','브레이브하트','터미네이터2','쉰들러 리스트'),
main="사용자 평가율 영화 Top10",
xlab="영화제목",
ylab="평가율",
las=1)
barplot(df_ratings_means$n ~ df_ratings_means$movieId,
names.arg=c('포레스트 검프','쇼생크 탈출','펄프 픽션','양들의 침묵','매트릭스','스타워즈','쥬라기공원','브레이브하트','터미네이터2','쉰들러 리스트'),
main="사용자 평가율 영화 Top10",
xlab="영화제목",
ylab="평가율",
las=2)
barplot(df_ratings_means$n ~ df_ratings_means$movieId,
names.arg=c('포레스트 검프','쇼생크 탈출','펄프 픽션','양들의 침묵','매트릭스','스타워즈','쥬라기공원','브레이브하트','터미네이터2','쉰들러 리스트'),
main="사용자 평가율 영화 Top10",
xlab="영화제목",
ylab="평가율",
las=3)
barplot(df_ratings_means$n ~ df_ratings_means$movieId,
names.arg=c('포레스트 검프','쇼생크 탈출','펄프 픽션','양들의 침묵','매트릭스','스타워즈','쥬라기공원','브레이브하트','터미네이터2','쉰들러 리스트'),
main="사용자 평가율 영화 Top10",
xlab="영화제목",
ylab="평가율",
las=4)
barplot(df_ratings_means$n ~ df_ratings_means$movieId,
names.arg=c('포레스트 검프','쇼생크 탈출','펄프 픽션','양들의 침묵','매트릭스','스타워즈','쥬라기공원','브레이브하트','터미네이터2','쉰들러 리스트'),
main="사용자 평가율 영화 Top10",
xlab="영화제목",
ylab="평가율",
las=2)
barplot(df_ratings_means$n ~ df_ratings_means$movieId,
names.arg=c('포레스트 검프','쇼생크 탈출','펄프 픽션','양들의 침묵','매트릭스','스타워즈','쥬라기공원','브레이브하트','터미네이터2','쉰들러 리스트'),
main="사용자 평가율 영화 Top10",
xlab="영화제목",
ylab="평가율",
las=2,horiz=T)
barplot(df_ratings_means$n ~ df_ratings_means$movieId, col="lightskyblue",
names.arg=c('포레스트 검프','쇼생크 탈출','펄프 픽션','양들의 침묵','매트릭스','스타워즈','쥬라기공원','브레이브하트','터미네이터2','쉰들러 리스트'),
main="사용자 평가율 영화 Top10",
las=2,horiz=T)
barplot(df_ratings_means$n ~ df_ratings_means$movieId, col="lightskyblue",
names.arg=c('포레스트 검프','쇼생크 탈출','펄프 픽션','양들의 침묵','매트릭스','스타워즈','쥬라기공원','브레이브하트','터미네이터2','쉰들러 리스트'),
main="사용자 평가율 영화 Top10", xlab="", ylab="",
las=2,horiz=T)
barplot(df_ratings_means$n ~ df_ratings_means$movieId, col="lightskyblue",
names.arg=c('포레스트 검프','쇼생크 탈출','펄프 픽션','양들의 침묵','매트릭스','스타워즈','쥬라기공원','브레이브하트','터미네이터2','쉰들러 리스트'),
main="사용자 평가율 영화 Top10", xlab="", ylab="",
las=2,horiz=T)
barplot(df_ratings_means$n ~ df_ratings_means$movieId, col="steelblue",
names.arg=c('포레스트 검프','쇼생크 탈출','펄프 픽션','양들의 침묵','매트릭스','스타워즈','쥬라기공원','브레이브하트','터미네이터2','쉰들러 리스트'),
main="사용자 평가율 영화 Top10", xlab="", ylab="",
las=2,horiz=T)
ggplot(df_ratings_means, aes(x=movieId, y=n)) +
geom_boxplot() +
theme_bw() +
theme(axis.text.x=element_text(angle=45, hjust=1))
ggplot(df_ratings_means, aes(x=movieId, y=n)) +
geom_bar() +
theme_bw() +
theme(axis.text.x=element_text(angle=45, hjust=1))
ggplot(df_ratings_means, aes(x=movieId, y=n)) +
geom_bar(stat="identity") +
theme_bw() +
theme(axis.text.x=element_text(angle=45, hjust=1))
df_ratings_means <- r %>%
group_by(movieId) %>%
summarise(mean_rating = mean(rating), n=n()) %>%
arrange(desc(n)) %>% head(10)
barplot(df_ratings_means$n ~ df_ratings_means$movieId, col="steelblue",
names.arg=c('포레스트 검프','쇼생크 탈출','펄프 픽션','양들의 침묵','매트릭스','스타워즈','쥬라기공원','브레이브하트','터미네이터2','쉰들러 리스트'),
main="사용자 평가율 영화 Top10", xlab="", ylab="", las=2,horiz=T)
barplot(df_ratings_means$n ~ df_ratings_means$movieId, col="steelblue",
names.arg=c('포레스트 검프','쇼생크 탈출','펄프 픽션','양들의 침묵','매트릭스','스타워즈','쥬라기공원','브레이브하트','터미네이터2','쉰들러 리스트'),
main="사용자 평가율 영화 Top10", xlab="", ylab="", las=2, horiz=T, cex.axis=2)
barplot(df_ratings_means$n ~ df_ratings_means$movieId, col="steelblue",
names.arg=c('포레스트 검프','쇼생크 탈출','펄프 픽션','양들의 침묵','매트릭스','스타워즈','쥬라기공원','브레이브하트','터미네이터2','쉰들러 리스트'),
main="사용자 평가율 영화 Top10", xlab="", ylab="", las=2, horiz=T)
axis(1,las=2)
axis(4,labels=FALSE,at=seq(from=1,to=73,by=6))
mybar = barplot(df_ratings_means$n ~ df_ratings_means$movieId, col="steelblue",
names.arg=c('포레스트 검프','쇼생크 탈출','펄프 픽션','양들의 침묵','매트릭스','스타워즈','쥬라기공원','브레이브하트','터미네이터2','쉰들러 리스트'),
main="사용자 평가율 영화 Top10", xlab="", ylab="", las=2, horiz=T)
text(x=mybar, y=df_ratings_means$n-0.5, labels=paste(df_ratings_means$n,"건"), col="black", cex=0.8)
df_ratings_means$n
df_ratings_means$n-0.5
text(x=mybar, y=df_ratings_means$n-0.5, labels=paste(df_ratings_means$n,"명"), col="black", cex=0.8)
text(x=mybar, labels=paste(df_ratings_means$n,"명"), col="black", cex=0.8)
text(x=mybar, labels=paste(df_ratings_means$n,"명"), col="black", cex=5)
text(x=mybar, labels=paste(df_ratings_means$n,"명"), col="black", cex=.8)
mybar = barplot(df_ratings_means$n ~ df_ratings_means$movieId, col="steelblue",
names.arg=c('포레스트 검프','쇼생크 탈출','펄프 픽션','양들의 침묵','매트릭스','스타워즈','쥬라기공원','브레이브하트','터미네이터2','쉰들러 리스트'),
main="사용자 평가율 영화 Top10", xlab="", ylab="", las=2, horiz=T)
text(x=mybar, labels=paste(df_ratings_means$n,"명"), col="black", cex=.8)
text(x=mybar, y=df_ratings_means$n+0.5,labels=paste(df_ratings_means$n,"명"), col="black", cex=.8)
text(x=mybar, y=df_ratings_means$n+5,labels=paste(df_ratings_means$n,"명"), col="black", cex=.8)
text(y=mybar, x=df_ratings_means$n+5,labels=paste(df_ratings_means$n,"명"), col="black", cex=.8)
text(x=mybar, y=df_ratings_means$n+5,labels=paste(df_ratings_means$n,"명"), col="black", cex=.8, xmin = 2.7, xmax =4.3)
mybar = barplot(df_ratings_means$n ~ df_ratings_means$movieId, col="steelblue",
names.arg=c('포레스트 검프','쇼생크 탈출','펄프 픽션','양들의 침묵','매트릭스','스타워즈','쥬라기공원','브레이브하트','터미네이터2','쉰들러 리스트'),
main="사용자 평가율 영화 Top10", xlab="", ylab="", las=2, horiz=T)
text(x=mybar, y=df_ratings_means$n+5,labels=paste(df_ratings_means$n,"명"), col="black", cex=.8, xmin = 2.7, xmax =4.3)
text(x=mybar, y=df_ratings_means$n+5,labels=paste(df_ratings_means$n,"명"), col="black", cex=.8)
text(x=mybar, y=df_ratings_means$n+5,labels=paste(df_ratings_means$n,"명"), col="black", cex=.8)
?test()
?text()
text(x=mybar, y=df_ratings_means$n+5,labels=paste(df_ratings_means$n,"명"), col="black", cex=.8,pos=5)
text(x=mybar, labels=paste(df_ratings_means$n,"명"), col="black", cex=.8, pos=5)
text(x=mybar, labels=paste(df_ratings_means$n,"명"), col="black", cex=.8, pos=5,1)
text(x=mybar, labels=paste(df_ratings_means$n,"명"), col="black", cex=.8, pos=c(5,1))
text(x=mybar, labels=paste(df_ratings_means$n,"명"), col="black", cex=.8, adj = c(0,5))
text(x=mybar, labels=paste(df_ratings_means$n,"명"), col="black", cex=.8, adj = c(5,0))
mybar = barplot(df_ratings_means$n ~ df_ratings_means$movieId, col="steelblue",
names.arg=c('포레스트 검프','쇼생크 탈출','펄프 픽션','양들의 침묵','매트릭스','스타워즈','쥬라기공원','브레이브하트','터미네이터2','쉰들러 리스트'),
main="사용자 평가율 영화 Top10", xlab="", ylab="", las=2, horiz=T)
text(x=mybar, labels=paste(df_ratings_means$n,"명"), col="black", cex=.8, adj = c(5,0))
text(x=mybar, labels=paste(df_ratings_means$n,"명"), col="black", cex=.8, adj = c(0,0))
text(x=mybar, labels=paste(df_ratings_means$n,"명"), col="black", cex=.8, adj = c(1,0))
text(x=mybar, labels=paste(df_ratings_means$n,"명"), col="black", cex=.8, adj = c(-1,0))
text(x=mybar, labels=paste(df_ratings_means$n,"명"), col="black", cex=.8, adj = c(-5,0))
text(x=mybar, labels=paste(df_ratings_means$n,"명"), col="black", cex=.8, adj = c(-8,0))
text(x=mybar, labels=paste(df_ratings_means$n,"명"), col="black", cex=.8, adj = c(-10,-1))
text(x=mybar, labels=paste(df_ratings_means$n,"명"), col="black", cex=.8, adj = c(-10,1))
text(x=mybar, labels=paste(df_ratings_means$n,"명"), col="black", cex=.8, adj = c(-10.5,1))
mybar = barplot(df_ratings_means$n ~ df_ratings_means$movieId, col="steelblue",
names.arg=c('포레스트 검프','쇼생크 탈출','펄프 픽션','양들의 침묵','매트릭스','스타워즈','쥬라기공원','브레이브하트','터미네이터2','쉰들러 리스트'),
main="사용자 평가율 영화 Top10", xlab="", ylab="", las=2, horiz=T)
text(x=mybar, labels=paste(df_ratings_means$n,"명"), col="black", cex=.8, adj = c(-10.5,1))
text(x=mybar, labels=paste(df_ratings_means$n,"명"), col="black", cex=.8,  y=df_ratings_means$n+0.5)
text(x=mybar, labels=paste(df_ratings_means$n,"명"), col="black", cex=.8,  y=df_ratings_means$n+0.5)
mybar = barplot(df_ratings_means$n ~ df_ratings_means$movieId, col="steelblue",
names.arg=c('포레스트 검프','쇼생크 탈출','펄프 픽션','양들의 침묵','매트릭스','스타워즈','쥬라기공원','브레이브하트','터미네이터2','쉰들러 리스트'),
main="사용자 평가율 영화 Top10", xlab="", ylab="", las=2, horiz=T)
text(x=mybar, labels=paste(df_ratings_means$n,"명"), col="black", cex=.8,  y=df_ratings_means$n+0.5)
mybar = barplot(df_ratings_means$n ~ df_ratings_means$movieId, col="steelblue",
names.arg=c('포레스트 검프','쇼생크 탈출','펄프 픽션','양들의 침묵','매트릭스','스타워즈','쥬라기공원','브레이브하트','터미네이터2','쉰들러 리스트'),
main="사용자 평가율 영화 Top10", xlab="", ylab="", las=2, horiz=T,
cex.names=.59)
r2<-r %>% group_by(movieId) %>% summarise(mean_rating = mean(rating), n=n())
ggplot(data=r2,aes(y=r2$mean_rating)) + geom_boxplot()
ggplot()+geom_point(mapping=aes(x=mean_rating, y=n), data=df_ratings_means, color = 'blue')
ggplot()+
geom_point(mapping=aes(x=mean_rating, y=n), data=df_ratings_means, color = 'blue')
ggplot(data=r2 ,aes(x=rating,y=n,fill=n)) +
geom_bar(stat="identity") +
ggtitle("평점 분포도") +
xlab("평점") + ylab("평점횟수") + theme_minimal() +
theme(plot.title=element_text(size=20, color="black")) +
annotate(geom = "rect", xmin = 2.7, xmax =4.3, ymin = 0, ymax = 30000, fill = "blue", alpha = 0.2, colour = "black", lty = 2)
ggplot()+
geom_point(mapping=aes(x=mean_rating, y=n), data=df_ratings_means, color = 'blue')
df_ratings_means$n
r2<-r %>% group_by(movieId) %>% summarise(mean_rating = mean(rating), n=n())
ggplot()+
geom_point(mapping=aes(x=rating, y=n), data=r2, color = 'blue')
df_ratings_means <- r %>%
group_by(movieId) %>%
summarise(mean_rating = mean(rating), n=n()) %>%
arrange(desc(n))
ggplot()+
geom_point(mapping=aes(x=rating, y=n), data=df_ratings_means, color = 'blue') +
annotate(geom = "rect", xmin = 2.7, xmax =4.3, ymin = 0, ymax = 30000, fill = "blue", alpha = 0.2, colour = "black", lty = 2)
ggplot()+
geom_point(mapping=aes(x=rating, y=n), data=df_ratings_means, color = 'blue')
ggplot()+geom_point(mapping=aes(x=mean_rating, y=n ), data=df_ratings_means, color = 'blue') +
annotate(geom = "rect", xmin = 2.7, xmax =4.3, ymin = 0, ymax = 30000, fill = "blue", alpha = 0.2, colour = "black", lty = 2)
ggplot()+geom_point(mapping=aes(x=mean_rating, y=n ), data=df_ratings_means, color = 'blue') +
annotate(geom = "rect", xmin = 2.7, xmax =4.3, ymin = 0, ymax = 350, fill = "blue", alpha = 0.2, colour = "black", lty = 2)
df_ratings_means <- r %>%
group_by(movieId) %>%
summarise(mean_rating = mean(rating), n=n()) %>%
arrange(desc(n))
ggplot()+geom_point(mapping=aes(x=mean_rating, y=n ), data=df_ratings_means, color = 'blue') +
annotate(geom = "rect", xmin = 2.7, xmax =4.3, ymin = 0, ymax = 350, fill = "blue", alpha = 0.2, colour = "black", lty = 2)
ggplot() +
geom_point(mapping=aes(x=mean_rating, y=n ),
data=df_ratings_means, color = 'blue') +
annotate(geom = "rect", xmin = 2.7, xmax =4.3, ymin = 0, ymax = 350,
fill = "blue", alpha = 0.2, colour = "black", lty = 2) +
theme_minimal() +
ggtitle("평점 Boxplot") +
xlab("") + ylab("") +
theme(plot.title=element_text(size=20, color="black"))
df_ratings_means <- r %>%
group_by(movieId) %>%
summarise(mean_rating = mean(rating), n=n()) %>%
arrange(desc(n)) %>% head(10)
mybar = barplot(df_ratings_means$n ~ df_ratings_means$movieId, col="steelblue",
names.arg=c('포레스트 검프','쇼생크 탈출','펄프 픽션','양들의 침묵','매트릭스','스타워즈','쥬라기공원','브레이브하트','터미네이터2','쉰들러 리스트'),
main="사용자 평가율 영화 Top10", xlab="", ylab="", las=2, horiz=T,
cex.names=.59)
# text(x=mybar, labels=paste(df_ratings_means$n,"명"), col="black", cex=.8, adj = c(-10.5,1))
ggplot()+geom_point(mapping=aes(x=mean_rating, y=n), data=df_ratings_means, color = 'blue') + annotate(geom = "rect", xmin = 1.5, xmax = 4.5, ymin = 25, ymax = 350, fill = "blue", alpha = 0.1, colour = "black", lty = 2)
df_ratings_means <- r %>%
group_by(movieId) %>%
summarise(mean_rating = mean(rating), n=n()) %>%
arrange(desc(n))
ggplot()+geom_point(mapping=aes(x=mean_rating, y=n), data=df_ratings_means, color = 'blue') + annotate(geom = "rect", xmin = 1.5, xmax = 4.5, ymin = 25, ymax = 350, fill = "blue", alpha = 0.1, colour = "black", lty = 2) +theme_minimal() +
ggtitle("평점 Boxplot") +
xlab("") + ylab("") +
theme(plot.title=element_text(size=20, color="black"))
ggplot()+geom_point(mapping=aes(x=mean_rating, y=n), data=df_ratings_means, color = 'blue') + annotate(geom = "rect", xmin = 1.5, xmax = 4.5, ymin = 25, ymax = 350, fill = "blue", alpha = 0.1, colour = "black", lty = 2) +theme_minimal() +
ggtitle("영화분포도") +
xlab("평균 평점") + ylab("평가 횟수") +
theme(plot.title=element_text(size=20, color="black"))
df_ratings_means <- r %>% group_by(movieId) %>% summarise(mean_rating = mean(rating), n=n())
df_ratings_means_n_over10 <- subset(df_ratings_means,n >=10)
str(df_ratings_means_n_over10)
barplot(df_ratings_means_n_over10$mean_rating~df_ratings_means_n_over10$movieId)
ggplot(data=df_ratings_means_n_over10,aes(x=df_ratings_means_n_over10$movieId,y=df_ratings_means_n_over10$mean_rating))+geom_point()
plot(df_ratings_means_n_over10$movieId, df_ratings_means_n_over10$mean_rating)
plot(df_ratings_means_n_over10$movieId,df_ratings_means_n_over10$mean_rating,type='l')
df_ratings_means_n_over10 <- subset(df_ratings_means,n >=10)
str(df_ratings_means_n_over10)
df_ratings_means <- r %>%
group_by(movieId) %>%
summarise(mean_rating = mean(rating), n=n()) %>%
arrange(desc(n))
ggplot()+geom_point(mapping=aes(x=mean_rating, y=n), data=df_ratings_means, color = 'blue') + annotate(geom = "rect", xmin = 1.5, xmax = 4.5, ymin = 25, ymax = 350, fill = "blue", alpha = 0.1, colour = "black", lty = 2) +theme_minimal() +
ggtitle("영화분포도") +
xlab("평균 평점") + ylab("평가 횟수") +
theme(plot.title=element_text(size=20, color="black"))
#막대그래프
barplot(df_ratings_means_n_over10$mean_rating~df_ratings_means_n_over10$movieId)
#산점도 그래프
ggplot(data=df_ratings_means_n_over10,aes(x=df_ratings_means_n_over10$movieId,y=df_ratings_means_n_over10$mean_rating))+geom_point()
#산점도 그래프
plot(df_ratings_means_n_over10$movieId, df_ratings_means_n_over10$mean_rating)
#꺾은선 그래프
plot(df_ratings_means_n_over10$movieId,df_ratings_means_n_over10$mean_rating,type='l')
down <-  subset(df_ratings_means,n <=100)
ggplot()+geom_point(mapping=aes(x=mean_rating, y=n), data=down, color = 'blue') + annotate(geom = "rect", xmin = 1.5, xmax = 4.5, ymin = 25, ymax = 110, fill = "purple", alpha = 0.1, colour = "black", lty = 2)
down <-  subset(df_ratings_means,n <=100)
ggplot()+
geom_point(mapping=aes(x=mean_rating, y=n), data=down, color = 'blue') +
annotate(geom = "rect", xmin = 1.5, xmax = 4.5, ymin = 25,
ymax = 110, fill = "purple", alpha = 0.1, colour = "black", lty = 2) +
ggtitle("100명 미만 영화분포도") +
xlab("평균 평점") + ylab("평가 횟수") +
theme(plot.title=element_text(size=20, color="black"))
down <-  subset(df_ratings_means,n <=100)
ggplot()+
geom_point(mapping=aes(x=mean_rating, y=n), data=down, color = 'blue') +
annotate(geom = "rect", xmin = 1.5, xmax = 4.5, ymin = 25,
ymax = 110, fill = "purple", alpha = 0.1, colour = "black", lty = 2) +
ggtitle("100명 미만 영화분포도") +
xlab("평균 평점") + ylab("평가 횟수") +
theme(plot.title=element_text(size=20, color="black")) +
theme_minimal()
ggplot(data=r2,aes(y=r2$mean_rating)) + geom_boxplot() +
ggtitle("평점 Boxplot") +
xlab("") + ylab("") +
theme(plot.title=element_text(size=20, color="black"))
ggplot(data=r2,aes(y=r2$mean_rating)) + geom_boxplot() +
ggtitle("평점 Boxplot") +
xlab("") + ylab("") + theme_minimal() +
theme(plot.title=element_text(size=20, color="black"))
ggplot(data=r2,aes(y=r2$mean_rating)) + geom_boxplot() +
ggtitle("평점 Boxplot") +
xlab("") + ylab("") + theme_minimal() +
theme(plot.title=element_text(size=20, color="black")) +
coord_flip()
#무비id 오름차순 정렬 후 새 인덱스 부여
m <- m[order(m$movieId),]
m$idx <- 1:nrow(m)
#movies - rating 병합
mr <- merge(m, r, key='movieId', all.y=T)
mr <- mr[,-c(1,7)]
mr <- mr[,-c(2,3)]
sum(duplicated(mr)) #[1] 3
which(duplicated(mr)|duplicated(mr,fromLast=T))
mr[which(duplicated(mr)|duplicated(mr,fromLast=T)),]
mr <- mr[-which(duplicated(mr)|duplicated(mr,fromLast=T)),]
mr <- mr[-c(80209,88669),]
#write.csv(mr, "./data/mr.csv",row.names = F)
# movies에 있는 장르분리 및 장르df생성
g <- data.table()
n <- nrow(m)
for (i in 1:n){
#print(i)
name_index <- as.character(m[i, 1])
item_index <- as.character(m[i, 3])
item_index_split_temp <- data.frame(strsplit(item_index, split = '\\|'))
m_temp <- data.frame(cbind(name_index, item_index_split_temp))
names(m_temp) <- c("movieId", "genres")
g <- rbind(g, m_temp)
}
rm(name_index, item_index, item_index_split_temp, m_temp) # delete temp dataset
glimpse(g)
summary(g)
g$movieId <- as.integer(g$movieId)
names(g) <- c("idx","genres")
unique(g$genres)
#(no genres listed) -> NA 결측치 처리
g$genres<- gsub("\\(no genres listed\\)", NA, g$genres)
barplot(table(g$genres))
g <- as.data.frame(g)
write.csv(g, "./data/genres.csv",row.names = F)
View(g)
library(data.table)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(caret)
library(recommenderlab)
#help(package="recommenderlab")
m <- read.csv("./data/movies.csv", header=T)
r <- read.csv("./data/ratings.csv", header=T)
t <- read.csv("./data/tags.csv", header=T)
g <- read.csv("./data/genres.csv", header=T)
mr <- read.csv("./data/mr.csv", header=T)
final_mr <- spread(mr, key = "title", value = "rating", fill = NA)
final_mr <- final_mr[,-1]
knitr::kable(head(mr))
#knitr::kable(head(mr[order(mr$userId),]))
#knitr::kable(head(mr[order(mr$rating),]))
knitr::kable(table(r$rating))
df <- as(final_mr, 'matrix')
df <- as(df, 'realRatingMatrix')
user_genres2 <- read.csv("./data/user_genres.csv", header=T)
glimpse(user_genres2)
ug <- user_genres2 %>% group_by(userId, genres) %>% mutate(mean_rating=mean(rating))
ug <- spread(ug, key = "genres", value = "mean_rating", fill = 0)
ug <- ug[,-c(1,3)]
knitr::kable(head(ug))
# 1. 거리행렬 구하기
ug_scaled <- scale(ug[-1]) # 거리 기반이므로 표준화 필요
d1 <- dist(ug_scaled[1:10,])
as.matrix(d1)[1:4,]
# 2. 거리행렬 모델 적용(계층적 군집화)
fit <- hclust(d1, method="average")  # method의 종류보다는 어떤 의도 하에 분류할 것인지에 따라 설명변수를 선택하는 것이 중요
plot(fit, hang=-1 , cex=0.8)
# 군집 수 설정
library(NbClust)
nc <- NbClust(ug_scaled, distance="euclidean", min.nc=2, max.nc=15, method="average")
nc <- NbClust(ug_scaled[1:10,], distance="euclidean", min.nc=2, max.nc=15, method="average")
View(ug_scaled)
nc <- NbClust(ug_scaled[1:10,], distance="euclidean", method="average")
View(ug_scaled)
ug_scaled[1:10,]
nc <- NbClust(ug[1:10,], distance="euclidean", method="average")
clusters <- cutree(fit, k=5)
table(clusters)     # 군집별 데이터 개수 확인
plot(fit, hang= -1, cex=0.8)
rect.hclust(fit, k=5)
View(ug)
View(g)
View(m)
View(final_mr)
View(user_genres2)
library(flexclust)
install.packages("flexclust")
library(flexclust)
data(nutrient)      # 유사한 식품 그룹 파악
str(nutrient)
head(nutrient)
str(nutrient)
head(nutrient)
head(ug)
ug <- as.data.frame(ug)
head(ug)
grep('//(',m,values=T)
head(m)
grep('//(',m$title,values=T)
grep('\\(',m$title,values=T)
words = strsplit(m$title, split="\\(")
View(words)
words = strsplit(m$title, split=paste0("\\(","[[:digit:]]","\\)"))
View(words)
words = strsplit(m$title, split=paste0("\\(","\\)"))
m$title2 <- gsub("\\(", "", m$title)
m$title2
m$title2 <- gsub("\\)", "", m$title)
m$title2
m$title2 <- gsub("\\(", "", m$title)
m$title2 <- gsub("\\)", "", m$title)2
m$title2 <- gsub("\\)", "", m$title2)
m$title2
year <- gsub("^\\1", "", m$title2)
year <- gsub("^1", "", m$title2)
year
View(m)
m$title2 <- strsplit(m$title, split = "\\(")
m$title2 <- strsplit(m$title, split = "\\(")
View(m)
m$title2 <- gsub("\\)", "", m$title)
m$title2
m$title2 <- strsplit(m$title, split = "\\(")
m$title2 <- strsplit(m$title2, split = "\\(")
m$title2
m <- read.csv('./data/movies.csv',header=T) # m = movies
r <- read.csv('./data/ratings.csv',header=T) # r = ratings
t <- read.csv('./data/tags.csv',header=T) # t = tags
head(m)
#m$title2 <- gsub("\\(", "", m$title)
m$year <- gsub("\\)", "", m$title)
m$year <- strsplit(m$year, split = "\\(")
m$year
View(m)
m$year <- grep("[:digit:]")
m$year <- grep("[:digit:]",m$year)
m$year
i=1
m$year[i]
m$year[[1]]
for(i in 1:length(m)){
m$year[[i]] <- grep("[:digit:]",m$year[[i]])
}
m$year
for(i in 1:length(m)){
m$year[[i]] <- grep("[[:digit:]]",m$year[[i]])
}
View(m)
m<-read.csv("./data/movies.csv", header = T)
m$year <- gsub("\\)", "", m$title)
m$year <- strsplit(m$year, split = "\\(")
length(m)
nrow(m)
for(i in 1:nrow(m)){
m$year[[i]] <- grep("[[:digit:]]",m$year[[i]])
}
m
View(m)
m<-read.csv("./data/movies.csv", header = T)
m$year <- gsub("\\)", "", m$title)
m$year <- strsplit(m$year, split = "\\(")
m<-read.csv("./data/movies.csv", header = T)
m$year <- gsub("\\)", "", m$title)
m$year <- strsplit(m$year, split = "\\(")
for(i in 1:nrow(m)){
m$year[[i]] <- grep("[[0-9]]",m$year[[i]])
}
m$year
View(m)
m<-read.csv("./data/movies.csv", header = T)
m$year <- gsub("\\)", "", m$title)
m$year <- strsplit(m$year, split = "\\(")
for(i in 1:nrow(m)){
m$year[[i]] <- grep("^1",m$year[[i]])
}
m$year
m<-read.csv("./data/movies.csv", header = T)
substrRight <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x))
}
substrRight(m$title, 5)
m$year <- gsub("\\)", "", m$title)
substrRight(m$title, 4)
m$year<-substrRight(m$year, 4)
m$year
View(m)
glimpse(m)
head(m)
